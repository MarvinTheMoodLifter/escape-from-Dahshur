@startuml System Sequence Diagram
actor User as "Player"
participant Game as "Game"
database Storage as "Storage"

User->>Game: Start game
Game->>User: introduction
User->>Game: continue
Game->>User: Present the room state and available actions

== Game Loop ==
loop Each Turn
    User->>Game: Choose action
    alt action is available
        Game->>User: action is available
        Game->>Game: attempt to execute action
        alt generic action success
            Game->>Game: update data
            Game->>User: report success
            opt has subaction
            Game->>User: possible subactions
            User->>Game: choice
             alt subaction availabe
             Game->>Game: attempt subaction
              alt subaction success
              Game->>Game: update data
              Game->>User: subaction completed
              else subaction failure
              Game->>User: subaction failed
              end 
              else subaction unavailable
              Game->>User: subaction failure
              end
              end
    else specific action success
                opt action is view inventory
        User->>Game: view inventory
        Game->>User: display inventory
        User->>Game: manage inventory (equip/drop)
        Game->>Game: update inventory state
    end
        opt interact with NPC/item/landmark
        User->>Game: interact with [NPC/item/landmark]
        Game->>User: interaction outcome
    end
    opt in combat
        loop Combat Loop
            User->>Game: Choose combat action
            Game->>User: report combat outcome
            opt combat ends
                Game->>Game: user not in combat
            end
        end
    end
    

       alt save
    User->>Game: Save game
    Game->>Storage: Store hero state
    Game->>Storage: Store location and room state
    Storage->>Game: Confirm save
    Game->>User: Confirm save
else load
    User->>Game: Load game
    Storage->>Game: Load saved hero state
    Storage->>Game: Load saved location and room state
    Storage->>Game: load finished
    Game->>User: Confirm load
end
    else action failure
        Game->>User: report failure
    end
    else action unavailable
    Game->>User: report action unavailable
    end
    opt hero health < 0
        Game->>User: show loss and exit loop
    end
    opt win condition = true
        Game->>User: show win and exit loop
    end
    
    end


@enduml
